{"version":3,"sources":["assets/images/picture.svg","common/layout/navbar-landing.js","common/component/button/button-home.js","modules/landing-component.js","app/landing-page.js","modules/portofolio-component.js","app/portofolio-page.js","common/router/router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","Menu","SubMenu","state","current","handleClick","e","console","log","setState","key","className","onClick","this","selectedKeys","mode","Item","MailOutlined","to","AppstoreOutlined","href","target","rel","Component","ButtonHome","type","text","disabled","borderRadius","background","textColor","border","margin","marginLeft","marginRight","marginTop","marginBottom","style","backgroundColor","color","Content","Layout","LandingComponent","image1","require","props","initialData","showModal","handleOk","handleCancel","overflow","lg","md","sm","src","alt","maxWidth","span","title","visible","onOk","onCancel","LandingPage","whyData","link","description","PortofolioComponent","minHeight","justify","map","data","image","PortofolioPage","Router","exact","path","component","App","React","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9cf8c57b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/picture.b69b5e71.svg\";","import React, { Component } from 'react';\r\nimport { Menu } from 'antd';\r\nimport '../layout/css/navbar-style.css';\r\nimport {\r\n  MailOutlined,\r\n  AppstoreOutlined,\r\n  SettingOutlined,\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass Navbar extends Component {\r\n  state = {\r\n    current: 'mail',\r\n  };\r\n\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n    <nav className=\"menuBar\">\r\n      <Menu onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\">\r\n        <Menu.Item key=\"mail\">\r\n          <MailOutlined />\r\n            <Link to=\"/\">Profile</Link> \r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <AppstoreOutlined />\r\n          <Link to=\"/portofolio\">Portofolio</Link>\r\n        </Menu.Item>\r\n       \r\n        <Menu.Item key=\"alipay\">\r\n          <a href=\"https://github.com/reksadnml\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            Repositori Github\r\n          </a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport './style.css';\r\n\r\nfunction ButtonHome({\r\n    type, text, disabled, borderRadius = 25,\r\n    background = '#CD5C5C', textColor = \"white\", border = 'none',\r\n    margin = '0px', marginLeft, marginRight, marginTop, marginBottom,\r\n    className,onClick\r\n})  //untuk membuat komponen kita membuat sebuah fungsi yang ada, dari fungsi itu nantinya kita definisikan apa saja yang mau\r\n//dibuat secara fleksibel seperti tipenya apa, text atau yg lain, untuk mengetahui itu bisa liat di dokumentasinya ant design\r\n{\r\n    return (\r\n        <Button\r\n            type={type}\r\n            className={className}\r\n            disabled={disabled}\r\n            style={{\r\n                backgroundColor: background,\r\n                color: textColor,\r\n                borderRadius: borderRadius,\r\n                border: border,\r\n                margin: margin,\r\n                marginLeft: marginLeft,\r\n                marginRight: marginRight,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n            }}\r\n            onClick={onClick}\r\n        >\r\n            {text}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default ButtonHome;","import React, { Component } from 'react'; //import dari react biasa\r\nimport { Layout, Row, Col, Modal } from 'antd'; //import dari ant seperti biasa\r\nimport '../assets/css/landing.css' //import css dari folder css yang ada di folder assets\r\nimport Navbar from '../common/layout/navbar-landing' //import komponen navbar dari folder layout yang ada di folder common \r\nimport ButtonHome from '../common/component/button/button-home'; //import komponen buttonhome yang ada di dalamn folder component yang ada di folder common\r\n\r\nconst { Content } = Layout; // membuat konstanta content yang berasal dari bawaan layout ant design, bisa dicek di dokumentasi antdesign\r\n\r\nclass LandingComponent extends Component{\r\n    render(){\r\n        const image1 = require(`../assets/images/picture.svg`); //membuat variabel image 1 dimana isinya merupakan importan gambar yang ada dari folder images\r\n        const {initialData,showModal,handleOk,handleCancel} = this.props; {/* ini merupakan fungsi\" yang sudah di definsiikan di landing-page.js \r\n        kemudian kita panggil di halaman landing-component.js ketika kita memamnggil komponent dari parent komponen, komponen yang dipanggil\r\n        akan menjadi sebuah properti, kemudian kita dapat menggunakan properti itu dihalaman ini.\r\n        */}\r\n        return(\r\n            <Layout className=\"landing-container\">\r\n                  {/* ini merupakan component navbar yang kita import dari folder layout yang ada di common*/}\r\n                <Content style={{ overflow: \"hidden\" }}> {/* ini merupakan component content yang sudah di define sebelumnya*/}\r\n                    <Row className=\"section-container\">\r\n                        <Col lg={12} md={12} sm={12}>\r\n                            <div className=\"image-big-container\">\r\n                                <img\r\n                                    src={image1}\r\n                                    alt=\"Home 1\"\r\n                                    style={{maxWidth: '80%'}}\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                        <Col lg={12} md={12} sm={12}>\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <div className=\"title-container\">\r\n                                        <span className=\"text-soft-blue title-biggest bold\">Hello, I'am</span>\r\n                                        <br/>\r\n                                        <span className=\"text-soft-blue title-big bold\">Reksa Milenia</span>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col span={24}>\r\n                                    <div className=\"image-hidden\">\r\n                                        <img\r\n                                            src={image1}\r\n                                            alt=\"Home 1\"\r\n                                            style={{maxWidth: '100%'}}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"description-container desc-medium\">\r\n                                        If your sky are dark, I'll be your star\r\n                                        \r\n                                    </div>\r\n                                </Col>\r\n                                <Col span={24}>\r\n                                    <div className=\"button-section-1-container\">                                \r\n                                        <ButtonHome\r\n                                            text=\"Show Me\"\r\n                                            className='button-participate'\r\n                                            onClick = {showModal}\r\n                                        />{/* ini merupakan component button yang kita sudah definisikan di atas atas nama buttonhome*/}\r\n                                        <ButtonHome\r\n                                            text=\"Another Information\"\r\n                                            background=\"white\"\r\n                                            textColor=\"#CD5C5C\"\r\n                                            border=\"1px solid #CD5C5C\"\r\n                                            marginLeft={16}\r\n                                            className='button-participate'\r\n                                        />\r\n                                    </div>\r\n                                </Col>\r\n                                <Modal\r\n                                    title=\"Contact\"\r\n                                    visible={initialData.visible}\r\n                                    onOk={handleOk}\r\n                                    onCancel={handleCancel}\r\n                                    className = \"modal-notif\"\r\n                                    >\r\n                                    <p className=\"text-notif\">Silakan email ke reksadini00@mail.ugm.ac.id</p>\r\n                                </Modal>{/* ini merupakan modal yang didalamnya memuat beberapa fungsi yang sudah di definisikan di atas sebagai this.props*/}\r\n                            </Row>\r\n                        </Col>  \r\n                    </Row>\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingComponent;","import React, {Component} from 'react'; \r\n// import react merupakan bawaan dari react itu sendiri\r\nimport LandingComponent from '../modules/landing-component'\r\n{/*import landingcomponent merupakan child dari parent landingpage, di\r\nfile landingpage, kita butuh sebuah componen yang akan digunakan untuk menampilkan halamannya\r\noleh karena itu kita membutuhkan landing component yang ada di folder modules. */}\r\n\r\nclass LandingPage extends Component {\r\n    state ={\r\n        visible: false,\r\n    }\r\n    //state digunakan untuk membuat inisial data yang ada dihalaman landing, dia dibuat di file landing-page.js\r\n    //pada file ini kita membuat variabel visible yang kita buat nilai awalnya false, variabel ini nantinya akan\r\n    //digunakan untuk menampilkan modal yang akan digunakan nanti\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n    //componentdimount nanti saja ya wkwk\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n          visible: true,\r\n        });\r\n    };\r\n    //showmodal ini merupakan function, dia memliki fungsi untuk mengubah state visible yang awalnya false,\r\n    //menjadi true, jadi ketika modalnya diklik akan keluar modalnya.\r\n\r\n    handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    \r\n      handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    //handleOk dan handleCancel digunakan untuk close modal\r\n\r\n    render(){\r\n        return (\r\n            <LandingComponent\r\n                initialData = {this.state} //ini maksudnya membuat varibel initalData yg isinya semua state yang telah dibuat\r\n                showModal = {this.showModal} //ini maksudnya membuat variabel showmodal yang akan dipanggil, this.showmodal mksdnya itu manggil functin show modal, karena masih satu halaman pakainya this.\r\n                handleCancel = {this.handleCancel} //sama seperti showmodal\r\n                handleOk = {this.handleOk} //sama seperti showmodal\r\n            />\r\n            //nah di sini kita mereturn component yang sudah kita import di atas di dalam landingcomponent itu\r\n            //kita bisa memasukkan data atau function yang kita perlukan, fungsi yang kita perlukan akan menjadi\r\n            //sebuah properti jika kita panggil di landing-component.js\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingPage;","import React, { Component } from 'react'; \r\nimport { Layout, Row, Col, Modal } from 'antd'; \r\nimport '../assets/css/portofolio.css' \r\nimport Navbar from '../common/layout/navbar-landing' \r\nimport ButtonHome from '../common/component/button/button-home'; \r\n\r\nconst { Content } = Layout; // membuat konstanta content \r\nconst whyData = [\r\n    {\r\n        // // image: require(`../../../assets/images/tracking.png`),\r\n        title: 'Star',\r\n        link : \"hhttps://www.instagram.com/reksadnml/\",\r\n        description: \"There are so much reason why i like to see the stars. \\n The first one, it reminds me of you. The second one, stars always shine even darkness follow her. And last one, because she know all of my pray for you.\"\r\n    },\r\n    {\r\n        // // image: require(`../../../assets/images/certificate.png`),\r\n        title: 'Moon',\r\n        link : \"\",\r\n        description: \"Look at that moon, honey! \\n She is not brave enough to show her light. \\n Do you know why? \\n Cause she know, \\n that you are brighter then her.\"\r\n    },\r\n    {\r\n        // // image: require(`../../../assets/images/paperless.png`),\r\n        title: 'Night',\r\n        link : \"\",\r\n        description: \"But darling, darkness will always come. \\n Don't worry, I'll be your side till dawn \\n Since i'm here, won't you hold my hand?\"\r\n    }\r\n]\r\n\r\nclass PortofolioComponent extends Component{\r\n    render(){\r\n        return(\r\n            <Layout className=\"landing-container\">\r\n                <Content style={{ overflow: \"hidden\" }}> \r\n                    <Row className=\"section-container\">\r\n                            <Col lg={24}>\r\n                                <div className=\"text-soft-blue title-big bold discover-container\">\r\n                                View Some Of My Stories\r\n                                </div>\r\n                            </Col>\r\n                            <Col lg={24}>\r\n                                <div className=\"text-black description-discover\">\r\n                                Hope the sunshine will make your heart melt \r\n                                </div>\r\n                            </Col>\r\n                            <Col lg={24}>\r\n                                <hr style={{\r\n                                    minHeight: 8,\r\n                                    backgroundColor: '#CD5C5C',\r\n                                    border: 'none',\r\n                                    maxWidth: 150,\r\n                                    borderRadius: 26,\r\n                                }}/>\r\n                            </Col>                        \r\n                            <Col lg={24} className=\"mt-20\">\r\n                                <Row\r\n                                    type=\"flex\" justify=\"center\"\r\n                                    className=\"card-why-container\"\r\n                                >\r\n                                    {\r\n                                        whyData.map( data =>\r\n                                            <Col lg={8} md={12} sm={12} className=\"\">\r\n                                                <div className=\"card-why-content\">\r\n                                                    <img src={data.image}  className=\"card-why-image\"/>\r\n                                                    <div className=\"text-soft-blue semi-bold mt-10\">\r\n                                                        {data.title}\r\n                                                    </div>\r\n                                                    <div className=\"mt-10\" style={{maxWidth:'260px'}}>\r\n                                                        {data.description}<br/><br/>\r\n                                                        <a href={data.link} className=\"btn btn-primary\"></a>\r\n                                                       {}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Col>\r\n                                        )\r\n                                    }\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PortofolioComponent;","import React, {Component} from 'react'; \r\nimport PortofolioComponent from '../modules/portofolio-component'\r\n\r\n\r\n\r\n\r\nclass PortofolioPage extends Component {\r\n    state ={\r\n        visible: false,\r\n    }\r\n   \r\n    componentDidMount(){\r\n\r\n    }\r\n    \r\n\r\n    showModal = () => {\r\n        this.setState({\r\n          visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    \r\n      handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    //handleOk dan handleCancel digunakan untuk close modal\r\n\r\n    render(){\r\n        return (\r\n            <PortofolioComponent\r\n                initialData = {this.state} //ini maksudnya membuat varibel initalData yg isinya semua state yang telah dibuat\r\n                showModal = {this.showModal} //ini maksudnya membuat variabel showmodal yang akan dipanggil, this.showmodal mksdnya itu manggil functin show modal, karena masih satu halaman pakainya this.\r\n                handleCancel = {this.handleCancel} //sama seperti showmodal\r\n                handleOk = {this.handleOk} //sama seperti showmodal\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default PortofolioPage;","import React, {Component} from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport LandingPage from '../../app/landing-page';\r\nimport PortofolioPage from '../../app/portofolio-page'\r\n\r\nclass Router extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route exact path=\"/\" component={LandingPage}/>\r\n                <Route path=\"/portofolio\" component={PortofolioPage}/>\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Router;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport '../src/assets/css/App.css';\n\nimport Navbar from './common/layout/navbar-landing';\nimport Routering from './common/router/router'\n\nclass App extends React.Component {\n  \n  render(){\n    return (\n      <div className=\"App\">\n        <Navbar/>\n        <Routering/>\n      </div>\n    );\n  }\n  \n}\nexport default App;\n/*import React from 'react';\nimport { Layout, Menu } from 'antd';\nimport { Card, Row } from 'antd';\nimport '../src/assets/css/App.css';\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\nconst { SubMenu } = Menu;\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst cardData = [\n  {\n    nama : \"Reksa\",\n    job : \"Eca\"\n  },\n  {\n    nama : \"Dini\",\n    job : \"Eca Lagi\"\n  },\n  {\n    nama : \"Milenia\",\n    job : \"Eca Juga\"\n  },\n]\n\nfunction App() {\n  return (\n    <Layout>\n    <Header className=\"header\">\n      <div className=\"logo\" />\n      <Menu\n        theme=\"dark\"\n        mode=\"horizontal\"\n        defaultSelectedKeys={['2']}\n        style={{ lineHeight: '64px' }}\n      >\n        <Menu.Item key=\"1\">Beranda</Menu.Item>\n        <Menu.Item key=\"2\">About</Menu.Item>\n      </Menu>\n    </Header>\n    <Layout>\n      <Sider width={200} className=\"site-layout-background\">\n        <Menu\n          mode=\"inline\"\n          defaultSelectedKeys={['1']}\n          defaultOpenKeys={['sub1']}\n          style={{ height: '100%', borderRight: 0 }}\n        >\n          <SubMenu\n            key=\"sub1\"\n            title={\n              <span>\n                <UserOutlined />\n                About Me\n              </span>\n            }\n          >\n            <Menu.Item key=\"1\">Nama</Menu.Item>\n            <Menu.Item key=\"2\">Masih Kosong</Menu.Item>\n          </SubMenu>\n        </Menu>\n      </Sider>\n      <Layout className=\"site-layout\" style={{ margin: 50 }}>\n      <Content style={{ margin: '24px 16px 0', overflow: 'initial' }}>\n        <div className=\"site-layout-background\" style={{ padding: 24, textAlign: 'center' }}>\n        <div className=\"site-card-wrapper\">\n    <Row gutter={16}>\n      <div className=\"App\">\n      {\n        cardData.map( data =>\n          <Card title={data.nama} bordered={true} style={{ margin:10,display:'inline-block', width: 300 }}>\n            <p>{data.job}</p>\n          </Card>\n      )\n    }\n    </div>\n    </Row>\n  </div>,\n  \n        </div>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>©2020 Created by Eca</Footer>\n      </Layout>\n    </Layout>\n  </Layout>\n\n  );\n}\n\nexport default App; */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport LandingPage from '../src/app/landing-page'\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App/></BrowserRouter>, document.getElementById('root'));\n//ReactDOM.render(<LandingPage/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}